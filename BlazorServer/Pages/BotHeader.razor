@using Libs;
@inject Libs.WowData wowData

<table class="table table-bordered">
    <tr>
        <th>Level</th>
        <th>X Coord,Y Coord:</th>
        <th>Bag Items:</th>
        <th>Health:</th>
        <th>Target:</th>
    </tr>
    <tr>
        <td>
            @playerReader.PlayerLevel (XP: @((int)playerReader.PlayerXpPercentage)%)
            <br />
            Time to level: @levelTracker.TimeToLevel
            <br />
            at @levelTracker.PredictedLevelTime.ToString("HH:mm:ss")
        </td>
        <td>@playerReader.XCoord.ToString("0.00"),@playerReader.YCoord.ToString("0.00")</td>
        <td> @wowData.bagReader.bagItems.Count</td>
        <td>@playerReader.HealthPercent %</td>
        <td>
            @if (!string.IsNullOrEmpty(playerReader.Target))
            {
                <div>
                    @playerReader.Target
                    (@playerReader.TargetLevel)
                    @((int)playerReader.TargetHealthPercentage) %

                    @if (!playerReader.PlayerBitValues.TargetIsNormal)
                    {
                        <div>
                            NOT NORMAL
                        </div>
                    }

                </div>
            }
            else
            {
                <div>Kills: @levelTracker.MobsKilled</div>
            }
            </td>
    </tr>
</table>

@code {

    PlayerReader playerReader => wowData.PlayerReader;
    LevelTracker levelTracker => wowData.LevelTracker;


    protected override void OnInitialized()
    {

        wowData.AddonDataChanged += (o, e) =>
        {
            base.InvokeAsync(() => StateHasChanged());
        };
    }
}
