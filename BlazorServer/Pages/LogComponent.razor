@using System.Linq;

<style>
    .log {
        font-family: "Courier New", Courier, monospace;
        font-size: small;
        padding: 0 0 5px 0 !important;
        padding-right: 10px !important;
    }
</style>

<table class="table table-borderless table-dark" cellspacing="20">
    @foreach (var evt in LoggerSink.Log.AsEnumerable().Reverse())
    {
        <tr>
            <td class="log">@evt.Timestamp.ToString("HH:mm:ss")</td>
            <td class="log">@evt.RenderMessage()</td>
        </tr>
    }
</table>

@code {

    protected override void OnInitialized()
    {
        LoggerSink.OnLogChanged -= this.LogChanged;
        LoggerSink.OnLogChanged += this.LogChanged;
    }

    private async void LogChanged(object sender, EventArgs args)
    {
        await InvokeAsync(() =>
        {
            base.StateHasChanged();
        });
    }

    public void Dispose()
    {
        LoggerSink.OnLogChanged -= this.LogChanged;
    }

}